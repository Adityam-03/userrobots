{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Popup","onClick","closePopup","App","onSearchChange","event","setState","searchfield","target","value","openPopup","popup","state","console","log","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Fragment","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MACnB,OACI,sBAAKC,UAAW,mDAAhB,UACA,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAuCK,IAAI,cACnD,gCACI,6BAAKJ,IACL,4BAAIC,WCkBDI,EAxBC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAId,OACI,8BAKFA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OAAO,cAAC,EAAD,CAECV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCNLC,EANG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,uBAAOC,KAAO,SAASC,YAAY,gBAAgBC,SAAUH,EAC7DT,UAAW,kCCIJa,EAPC,SAACC,GACb,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,mBAAmBC,OAAO,SAAjE,SACCJ,EAAMK,YCMAC,G,YATD,SAACN,GACX,OACI,qBAAKd,UAAY,cAAjB,SACA,qBAAKA,UAAY,iBAAjB,SACI,qBAAKA,UAAY,eAAeqB,QAAUP,EAAMQ,WAAhD,qBCqGGC,E,kDA/FX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GAEd,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAf/B,EA6BbC,UAAY,WACR,EAAKJ,SAAS,CAACK,OAAM,KA9BZ,EAgCbT,WAAa,WACT,EAAKI,SAAS,CAACK,OAAM,KA/BrB,EAAKC,MAAM,CAEX5B,OAAQ,GACRuB,YAAY,GACZI,OAAO,GAEPE,QAAQC,IAAI,eARH,E,qDAkBb,WAAoB,IAAD,OACfD,QAAQC,IAAI,4BACZC,MAAM,8CACL7C,MAAK,SAAA8C,GACF,OAAOA,EAASC,UAEnB/C,MAAK,SAAAgD,GACF,EAAKZ,SAAS,CAACtB,OAAOkC,OAE1BL,QAAQC,IAAI,0B,oBAQhB,WACI,MAA6BK,KAAKP,MAA3B5B,EAAP,EAAOA,OAAOuB,EAAd,EAAcA,YAElBM,QAAQC,IAAI,eAER,IAAMM,EAAepC,EAAOqC,QAAO,SAAAC,GAC/B,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASjB,EAAYgB,kBAEjE,OAAQH,EAAeK,OAGnB,eAAC,IAAMC,SAAP,WACCP,KAAKP,MAAMD,MAAQ,cAAC,EAAD,CAAOT,WAAaiB,KAAKjB,aAAc,GAC3D,sBAAKtB,UAAU,KAAf,UAEA,0CACA,wBAAQqB,QAASkB,KAAKT,UAAtB,wBACA,cAAC,EAAD,CAAWrB,aAAc8B,KAAKf,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUpB,OAAQoC,YAVlB,oD,GA7CcO,aCiBlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAE,EAAF,MAEFC,SAASC,eAAe,SAM1BjE,M","file":"static/js/main.ea1a2b8e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({id,name,email}) =>{\r\n    return(\r\n        <div className= \"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img src={`https://robohash.org/${id}?200*200`}alt=\"RoboImage\"/>\r\n        <div>\r\n            <h2>{name}</h2> \r\n            <p>{email}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList =({robots}) => {\r\n    // const cardArray = robots.map((user,i) => {\r\n    //    return <Card id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    // })\r\n    return(\r\n        <div>\r\n {/*<Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>\r\n    <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n    <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/> */}\r\n    {/* {cardArray} */}\r\n    { robots.map((user,i) => {\r\n       return <Card \r\n               key={i}\r\n               id={robots[i].id}\r\n               name={robots[i].name} \r\n               email={robots[i].email}\r\n               />\r\n    })\r\n        \r\n    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <input type = \"search\" placeholder='Search Robots' onChange={searchChange}\r\n        className =\"pa3 ba b-green bg-light-blue\"/>\r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =  (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'3 px solid black',height:'500px'}}>\r\n        {props.children}\r\n        </div>\r\n    )}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './popup.css';\r\nconst Popup = (props) =>{\r\n    return(\r\n        <div className = \"popup--back\">\r\n        <div className = \"popup--content\">\r\n            <div className = \"popup--close\" onClick ={props.closePopup}>x</div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Popup;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\n\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport \"./App.css\";\nimport Popup from \"../components/Popup\";\n// const state = {\n//     robots: 'robots',\n//     searchfield:''\n// }\nclass App extends Component {\n    constructor(){\n        super()\n        this.state={\n        //message:'TirthFans'\n        robots: [],\n        searchfield:'',\n        popup: false\n        }\n        console.log(\"constructor\");\n    }\n    // changeMessage =() =>{\n    //    this.setState({message:\"You subscribed successfully\"});\n    // }\n    onSearchChange = (event)=>{\n        \n        this.setState({searchfield:event.target.value}); \n    }\n   \n    componentDidMount(){\n        console.log(\"Component did Mount run!\")\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response =>{\n            return response.json()\n        })\n        .then(users=>{\n            this.setState({robots:users});\n        })\n        console.log(\"After setting state!\");\n    }\n    openPopup = () => {\n        this.setState({popup:true});\n    }\n    closePopup = () =>{\n        this.setState({popup:false});\n    }\n    render(){\n        const {robots,searchfield} = this.state;\n\n    console.log(\"Render run!\");\n\n        const filteredRobots=robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\nreturn !filteredRobots.length ?\n    <h1>Loading.......</h1>\n : (\n    <React.Fragment>\n    {this.state.popup ? <Popup closePopup ={this.closePopup}/>:\"\"}\n    <div className='tc'>\n    \n    <h1>RoboFans</h1>{/* {\"You need to change this message when no robot name matches!\"} */}\n    <button onClick={this.openPopup}>open Popup</button>\n    <SearchBox searchChange={this.onSearchChange}/>\n    <Scroll>\n    <CardList robots={filteredRobots}/>\n    </Scroll>\n    {/* <button type=\"button\" onClick={this.changeMessage}>SUBSCRIBE</button> */}\n   \n    \n</div>\n</React.Fragment>\n )\n}\n}\n\n     \n// class App extends Component{\n//     constructor(){\n//         super();\n//         this.state={\n//             name:\"Tirth\"\n//         }\n//         console.log(\"Inside Constructor\");\n//     }\n// componentWillMount(){\n//     console.log(\"Inside component will mount\");\n//      setTimeout(async ()=>{\n//     await this.setState({name:\"Arafat will\"});\n//     console.log(\"Inside setTimeout\")\n//     },3000)\n//     console.log(\"I Will 2\")\n// }\n// componentDidMount(){\n//     console.log(\"Inside component did mount\");\n//     setTimeout(()=> {\n//         this.setState({name:\"Rekha did\"});\n//     },1000)\n// }\n// render(){\n//     console.log(\"Inside Render\");\n//     return(\n//         <h1>Hello world this is {this.state.name} </h1>\n//     )\n// }\n// }\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\n import App from './containers/App';\n\n// const Layout = (props) => {\n//   console.log(props.children);\n//   return(\n//     <div>\n//       <header>My Header</header>\n//       <main>{props.children[0]}</main>\n//       <h1>I am a third child</h1>\n//     </div>\n//   )\n// }\n// const App =() =>{\n//   return(\n//     <div>\n//      <Layout>\n//      <h1>I am First child</h1>\n//      <h1>I am Second child</h1>\n//      </Layout>\n//      </div>\n//   )\n  \n// }\nReactDOM.render(\n  <React.StrictMode>\n    < App/>\n     </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}